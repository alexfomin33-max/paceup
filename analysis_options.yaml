include: package:flutter_lints/flutter.yaml

linter:

   rules:
    prefer_relative_imports: true # Требует относительные импорты внутри lib/ (короче и не зависит от имени пакета).
    always_use_package_imports: false # Строго package-импорты.

    always_declare_return_types: true # Заставляет явно писать тип возвращаемого значения функции (код легче читать, IDE лучше подсказывает типы, меньше сюрпризов).
    prefer_const_constructors: true # Просит ставить const там, где виджет не меняется по данным (меньше пересозданий и мусора, дешевле перерисовка).
    use_key_in_widget_constructors: true # Напоминает добавлять super.key в конструкторы виджетов. Ключи помогают Flutter правильно «сопоставлять» виджеты при перестройке (особенно в списках/анимациях). Это про стабильную идентичность.
    avoid_print: true # Запрещает print(...) в коде. В проде print шумит и тормозит.
    # unawaited_futures: true # Предупреждает, если вы запустили Future, но его не await-нули и не пометили намеренно «фоновой». Случайно потерянные async-операции → скрытые баги.
    
analyzer:
  errors:
    invalid_use_of_protected_member: error # Ошибка, если используем метод/поле, помеченное как @protected, из чужого места. Не ломаем инкапсуляцию. Если API помечен «только для наследников/внутри класса», не трогаем его в других местах.
    # deprecated_member_use: warning # Предупреждение при использовании устаревшего API. Видим, что пора мигрировать на новый API. Оставляем как warning (не error), чтобы не блокировать сборки, но помнить о долге.