import 'package:flutter/material.dart';

// üîπ –ò–º–ø–æ—Ä—Ç —ç–∫—Ä–∞–Ω–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
import 'screens/createacc_screen.dart';
import 'screens/splash_screen.dart';
import 'screens/home_screen.dart';
import 'screens/lenta_screen.dart';
import 'screens/regstep1_screen.dart';
import 'screens/regstep2_screen.dart';
import 'screens/createacccode_screen.dart';
// import 'screens/addaccsms_screen.dart'; // –ø–æ–∫–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º
// import 'screens/login_screen.dart';
// import 'screens/profile_screen.dart';
// import 'screens/settings_screen.dart';

/// üîπ –°–ª–æ–≤–∞—Ä—å –º–∞—Ä—à—Ä—É—Ç–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (routes)
/// –ö–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ ‚Äî –ø—É—Ç—å –∫ —ç–∫—Ä–∞–Ω—É
/// –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ MaterialApp(routes: appRoutes)
final Map<String, WidgetBuilder> appRoutes = {
  // üîπ –≠–∫—Ä–∞–Ω —Å–ø–ª—ç—à–∞ ‚Äî –ø–µ—Ä–≤—ã–π —ç–∫—Ä–∞–Ω –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
  '/splash': (context) => const SplashScreen(),

  // üîπ –ì–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω (–¥–æ–º–∞—à–Ω–∏–π)
  '/home': (context) => const HomeScreen(),

  // üîπ –≠–∫—Ä–∞–Ω —Å–æ–∑–¥–∞–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞
  '/createacc': (context) => const CreateaccScreen(),

  // üîπ –≠–∫—Ä–∞–Ω –ª–µ–Ω—Ç—ã / –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  // –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç userId
  '/lenta': (context) {
    final args = ModalRoute.of(context)?.settings.arguments;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–µ—Ä–µ–¥–∞–Ω userId
    if (args is Map && args.containsKey('userId')) {
      return LentaScreen(userId: args['userId'] as int);
    }

    // –ï—Å–ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω—ã ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º home
    return const HomeScreen();
  },

  // üîπ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è ‚Äî —à–∞–≥ 1, —Ç—Ä–µ–±—É–µ—Ç userId
  '/regstep1': (context) {
    final args = ModalRoute.of(context)?.settings.arguments;
    if (args is Map && args.containsKey('userId')) {
      return Regstep1Screen(userId: args['userId'] as int);
    }
    return const HomeScreen(); // fallback
  },

  // üîπ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è ‚Äî —à–∞–≥ 2, —Ç—Ä–µ–±—É–µ—Ç userId
  '/regstep2': (context) {
    final args = ModalRoute.of(context)?.settings.arguments;
    if (args is Map && args.containsKey('userId')) {
      return Regstep2Screen(userId: args['userId'] as int);
    }
    return const HomeScreen(); // fallback
  },

  // üîπ –≠–∫—Ä–∞–Ω –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞ —á–µ—Ä–µ–∑ SMS
  // –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç phone
  '/addaccsms': (context) {
    final args = ModalRoute.of(context)?.settings.arguments;
    if (args is Map && args.containsKey('phone')) {
      return AddAccSmsScreen(phone: args['phone'] as String);
    }
    return const HomeScreen(); // fallback
  },

  // üîπ –≠–∫—Ä–∞–Ω –≤–≤–æ–¥–∞ –∫–æ–¥–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è (–ø–æ–∫–∞ –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω)
  // '/createacccode': (context) => const CreateAccCodeScreen(),

  // üîπ –ü—Ä–∏–º–µ—Ä—ã —ç–∫—Ä–∞–Ω–æ–≤ –¥–ª—è –±—É–¥—É—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
  // '/login': (context) => const LoginScreen(),
  // '/profile': (context) => const ProfileScreen(),
  // '/settings': (context) => const SettingsScreen(),
};
