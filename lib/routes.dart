import 'package:flutter/material.dart';
import 'screens/splash_screen.dart';
// import 'screens/home_shell.dart';
import 'screens/lenta_screen.dart';
import 'screens/regstep1_screen.dart';
import 'screens/regstep2_screen.dart';
import 'screens/addaccsms_screen.dart';
import 'screens/home_screen.dart';
import 'screens/createacc_screen.dart';
import 'screens/login_screen.dart';
import 'widgets/app_bottom_nav_shell.dart';

/// üîπ –°–ø–∏—Å–æ–∫ –º–∞—Ä—à—Ä—É—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –æ—Ç–∫—Ä—ã–≤–∞—Ç—å—Å—è –≤–Ω—É—Ç—Ä–∏ –Ω–∏–∂–Ω–µ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
const bottomNavRoutes = ['/lenta'];

/// üîπ –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º–∞—Ä—à—Ä—É—Ç–æ–≤ –¥–ª—è Navigator
/// –ü–æ–∑–≤–æ–ª—è–µ—Ç –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å —ç–∫—Ä–∞–Ω—ã –∏ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∏–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã
Route<dynamic> onGenerateRoute(RouteSettings settings) {
  final args = settings.arguments; // –ê—Ä–≥—É–º–µ–Ω—Ç—ã, –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
  Widget screen; // –≠–∫—Ä–∞–Ω, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ–º –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å

  switch (settings.name) {
    case '/splash':
      // üîπ –°—Ç–∞—Ä—Ç–æ–≤—ã–π —ç–∫—Ä–∞–Ω –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
      screen = const SplashScreen();
      break;

    case '/home':
      // üîπ –ì–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω –±–µ–∑ –Ω–∏–∂–Ω–µ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
      screen = const HomeScreen();
      break;

    case '/lenta':
      // üîπ –≠–∫—Ä–∞–Ω –ª–µ–Ω—Ç—ã ‚Äî –ø—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è bottom nav
      if (args is Map && args.containsKey('userId')) {
        screen = LentaScreen(userId: args['userId'] as int);
      } else {
        // –ï—Å–ª–∏ userId –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫—É
        screen = LentaScreen(userId: 123);
      }
      break;

    case '/regstep1':
      // üîπ –ü–µ—Ä–≤—ã–π —à–∞–≥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
      if (args is Map && args.containsKey('userId')) {
        screen = Regstep1Screen(userId: args['userId'] as int);
      } else {
        // –ï—Å–ª–∏ userId –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ‚Äî fallback –Ω–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω
        screen = const HomeScreen();
      }
      break;

    case '/regstep2':
      // üîπ –í—Ç–æ—Ä–æ–π —à–∞–≥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
      if (args is Map && args.containsKey('userId')) {
        screen = Regstep2Screen(userId: args['userId'] as int);
      } else {
        screen = const HomeScreen();
      }
      break;

    case '/addaccsms':
      // üîπ –≠–∫—Ä–∞–Ω –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞ —á–µ—Ä–µ–∑ SMS
      if (args is Map && args.containsKey('phone')) {
        screen = AddAccSmsScreen(phone: args['phone'] as String);
      } else {
        screen = const HomeScreen();
      }
      break;

    case '/createacc':
      // üîπ –≠–∫—Ä–∞–Ω —Å–æ–∑–¥–∞–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞
      screen = const CreateaccScreen();
      break;

    case '/login':
      // üîπ –≠–∫—Ä–∞–Ω –≤—Ö–æ–¥–∞ (–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è)
      screen = const LoginScreen();
      break;

    default:
      // üîπ –õ—é–±–æ–π –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –Ω–∞ SplashScreen
      screen = const SplashScreen();
  }

  // üîπ –ï—Å–ª–∏ –º–∞—Ä—à—Ä—É—Ç –≤—Ö–æ–¥–∏—Ç –≤ —Å–ø–∏—Å–æ–∫ bottomNavRoutes ‚Äî –æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º —ç–∫—Ä–∞–Ω –≤ AppBottomNavShell
  if (bottomNavRoutes.contains(settings.name)) {
    return MaterialPageRoute(
      builder: (_) => AppBottomNavShell(
        screens: [screen], // –ü–µ—Ä–µ–¥–∞–µ–º —ç–∫—Ä–∞–Ω –≤–Ω—É—Ç—Ä—å –æ–±–æ–ª–æ—á–∫–∏ bottom nav
      ),
      settings: settings,
    );
  } else {
    // üîπ –û–±—ã—á–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –º–∞—Ä—à—Ä—É—Ç–∞ –±–µ–∑ –Ω–∏–∂–Ω–µ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    return MaterialPageRoute(builder: (_) => screen, settings: settings);
  }
}
