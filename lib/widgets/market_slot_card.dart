// lib/widgets/market_slot_card.dart

import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import '../theme/app_theme.dart';
import '../models/market_models.dart';
import '../screens/tradechat_slots_screen.dart';
import 'pills.dart';

/// –û—Ç–¥–µ–ª—å–Ω—ã–π –≤–∏–¥–∂–µ—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ –°–õ–û–¢–ê.
/// –ú–∏–Ω–∏–∞—Ç—é—Ä–∞ –ù–ï –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–∞.
class MarketSlotCard extends StatelessWidget {
  final MarketItem item;
  final bool expanded; // —Å–µ–π—á–∞—Å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è ¬´–ê–ª—ã–µ –ü–∞—Ä—É—Å–∞¬ª (–ø—Ä–∏–º–µ—Ä)
  final VoidCallback onToggle; // –∫–æ–ª–ª–±—ç–∫ –Ω–∞ —Ç–∞–ø –ø–æ –∫–∞—Ä—Ç–æ—á–∫–µ (—Ä–∞—Å–∫—Ä—ã—Ç—å/—Å–≤–µ—Ä–Ω—É—Ç—å)

  const MarketSlotCard({
    super.key,
    required this.item,
    required this.expanded,
    required this.onToggle,
  });

  // –£—Å–ª–æ–≤–Ω—ã–π –ø—Ä–∏–∑–Ω–∞–∫: —Ç–æ–ª—å–∫–æ –¥–ª—è –æ–¥–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º ¬´–¥–µ—Ç–∞–ª–∏¬ª –Ω–∏–∂–µ
  bool get _hasDetails =>
      item.title.contains('–ê–ª—ã–µ –ü–∞—Ä—É—Å–∞') || item.title.contains('–ê–ª—ã–µ –ü–∞—Ä—É—Å–∞"');

  @override
  Widget build(BuildContext context) {
    return GestureDetector(
      // –ü–æ –Ω–∞–∂–∞—Ç–∏—é –Ω–∞ —Å–≤–æ–±–æ–¥–Ω–æ–µ –º–µ—Å—Ç–æ –∫–∞—Ä—Ç–æ—á–∫–∏ ‚Äî –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Ä–∞—Å–∫—Ä—ã—Ç–∏–µ
      onTap: onToggle,
      child: Container(
        decoration: BoxDecoration(
          color: Colors.white,
          borderRadius: BorderRadius.circular(8),
          boxShadow: [
            BoxShadow(
              color: Colors.black.withValues(alpha: 0.06),
              blurRadius: 12,
              offset: const Offset(0, 2),
            ),
          ],
        ),
        padding: const EdgeInsets.all(6),
        child: Column(
          children: [
            // –í–µ—Ä—Ö–Ω—è—è —Å—Ç—Ä–æ–∫–∞: –º–∏–Ω–∏–∞—Ç—é—Ä–∞ + –∫–æ–Ω—Ç–µ–Ω—Ç + –∫–Ω–æ–ø–∫–∞
            Row(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                // –ú–∏–Ω–∏–∞—Ç—é—Ä–∞ —Å–ª–µ–≤–∞ ‚Äî –ù–ï –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–∞
                _Thumb(imageAsset: item.imageUrl, heroGroup: item),
                const SizedBox(width: 10),

                // –¢–µ–∫—Å—Ç–æ–≤–∞—è —á–∞—Å—Ç—å –∏ —á–∏–ø—ã
                Expanded(
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      const SizedBox(height: 2),
                      // –ó–∞–≥–æ–ª–æ–≤–æ–∫ + —Å—Ç—Ä–µ–ª–∫–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å –¥–µ—Ç–∞–ª–∏)
                      Row(
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: [
                          Expanded(
                            child: Text(
                              item.title,
                              maxLines: 2,
                              overflow: TextOverflow.ellipsis,
                              style: const TextStyle(
                                fontFamily: 'Inter',
                                fontSize: 15,
                                fontWeight: FontWeight.w500,
                                height: 1.2,
                                color: Colors.black,
                              ),
                            ),
                          ),
                          if (_hasDetails) ...[
                            const SizedBox(width: 4),
                            AnimatedRotation(
                              duration: const Duration(milliseconds: 150),
                              turns: expanded ? 0.5 : 0.0,
                              child: Icon(
                                CupertinoIcons.chevron_down,
                                size: 18,
                                color: AppColors.text.withValues(alpha: 0.6),
                              ),
                            ),
                          ],
                        ],
                      ),
                      const SizedBox(height: 14),

                      // –û–¥–Ω–∞ —Å—Ç—Ä–æ–∫–∞: –¥–∏—Å—Ç–∞–Ω—Ü–∏—è ‚Ä¢ –ø–æ–ª ‚Ä¢ —Ü–µ–Ω–∞ ‚Ä¢ –∫–Ω–æ–ø–∫–∞ —Å–ø—Ä–∞–≤–∞
                      Row(
                        children: [
                          DistancePill(text: item.distance),
                          const SizedBox(width: 6),
                          if (item.gender == Gender.male)
                            const GenderPill.male()
                          else
                            const GenderPill.female(),
                          const SizedBox(width: 6),
                          PricePill(text: _formatPrice(item.price)),
                          const Spacer(),
                          _BuyButtonText(
                            text: item.buttonText,
                            enabled: item.buttonEnabled,
                            onPressed: () {
                              Navigator.of(context, rootNavigator: true).push(
                                MaterialPageRoute(
                                  builder: (_) => TradeChatSlotsScreen(
                                    itemTitle: item.title,
                                    itemThumb: item.imageUrl,
                                    distance: item.distance,
                                    gender: item.gender,
                                    price: item.price,
                                    statusText: item.locked
                                        ? '–ë—Ä–æ–Ω—å'
                                        : '–°–≤–æ–±–æ–¥–µ–Ω',
                                  ),
                                ),
                              );
                            },
                          ),
                        ],
                      ),
                    ],
                  ),
                ),
              ],
            ),

            // –ù–∏–∂–Ω—è—è ¬´—Ä–∞—Å–∫—Ä—ã–≤–∞—à–∫–∞¬ª ‚Äî –ø—Ä–∏–º–µ—Ä –¥–ª—è –æ–¥–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏
            if (_hasDetails)
              AnimatedCrossFade(
                firstChild: const SizedBox.shrink(),
                secondChild: Padding(
                  padding: const EdgeInsets.only(top: 10),
                  child: Container(
                    width: double.infinity,
                    padding: const EdgeInsets.all(10),
                    decoration: BoxDecoration(
                      color: const Color(0xFFF8F9FB),
                      border: Border.all(color: AppColors.border),
                      borderRadius: BorderRadius.circular(6),
                    ),
                    child: const Text(
                      '–ò–º—è: –ò–ª—å—è. –í—Ä–µ–º—è: 3:01 - 3:15. '
                      '–ü–µ—Ä–µ–¥–∞—á–∞ –ø–æ –¥–æ–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –≤ –ú–æ—Å–∫–≤–µ, –ª–∏–±–æ –≤ –°–ü–± –Ω–∞ —ç–∫—Å–ø–æ.',
                      style: TextStyle(
                        fontFamily: 'Inter',
                        fontSize: 13,
                        color: Colors.black,
                      ),
                    ),
                  ),
                ),
                crossFadeState: expanded
                    ? CrossFadeState.showSecond
                    : CrossFadeState.showFirst,
                duration: const Duration(milliseconds: 180),
              ),
          ],
        ),
      ),
    );
  }

  /// –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ü–µ–Ω—É –≤ –≤–∏–¥ ¬´12 345 ‚ÇΩ¬ª
  String _formatPrice(int price) {
    final s = price.toString();
    final b = StringBuffer();
    for (int i = 0; i < s.length; i++) {
      final pos = s.length - i;
      b.write(s[i]);
      if (pos > 1 && pos % 3 == 1) b.write(' ');
    }
    return '${b.toString()} ‚ÇΩ';
  }
}

/// –ù–ï –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–∞—è –º–∏–Ω–∏–∞—Ç—é—Ä–∞ —Å–ª–æ—Ç–∞.
/// –û—Å—Ç–∞–≤–∏–ª Hero –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –ø–æ—è–≤–ª–µ–Ω–∏—è/—Å–∫—Ä–æ–ª–ª–∞, –Ω–æ –±–µ–∑ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤.
class _Thumb extends StatelessWidget {
  final String imageAsset;
  final Object? heroGroup;

  const _Thumb({required this.imageAsset, this.heroGroup});

  @override
  Widget build(BuildContext context) {
    return Hero(
      tag: Object.hash(heroGroup ?? imageAsset, 0),
      child: Container(
        width: 64,
        height: 64,
        decoration: BoxDecoration(
          borderRadius: BorderRadius.circular(4),
          color: AppColors.background,
          border: Border.all(color: AppColors.border),
          image: DecorationImage(
            image: AssetImage(imageAsset),
            fit: BoxFit.cover,
          ),
        ),
        clipBehavior: Clip.antiAlias,
      ),
    );
  }
}

class _BuyButtonText extends StatelessWidget {
  final String text;
  final bool enabled;
  final VoidCallback? onPressed; // üîπ –Ω–æ–≤—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä

  const _BuyButtonText({
    required this.text,
    required this.enabled,
    this.onPressed,
  });

  @override
  Widget build(BuildContext context) {
    final bg = enabled ? AppColors.secondary : Colors.grey.shade300;
    final fg = enabled ? Colors.white : Colors.grey.shade700;
    final icon = text == '–ë—Ä–æ–Ω—å' ? CupertinoIcons.lock : CupertinoIcons.cart;

    return ConstrainedBox(
      constraints: const BoxConstraints(minWidth: 72),
      child: SizedBox(
        height: 30,
        child: ElevatedButton.icon(
          onPressed: enabled ? onPressed : null, // üîπ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–ª–ª–±—ç–∫
          style: ElevatedButton.styleFrom(
            backgroundColor: bg,
            foregroundColor: fg,
            elevation: 0,
            padding: const EdgeInsets.symmetric(horizontal: 8),
            minimumSize: Size.zero,
            shape: RoundedRectangleBorder(
              borderRadius: BorderRadius.circular(6),
            ),
          ),
          icon: Icon(icon, size: 14),
          label: Text(
            text,
            style: const TextStyle(
              fontFamily: 'Inter',
              fontSize: 13,
              fontWeight: FontWeight.w600,
            ),
          ),
        ),
      ),
    );
  }
}
