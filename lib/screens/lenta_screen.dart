import 'package:flutter/material.dart';
import 'package:flutter_map/flutter_map.dart';
import 'package:latlong2/latlong.dart';
import '../theme/text_styles.dart';

/// üîπ RouteCard ‚Äî –∫–∞—Ä—Ç–æ—á–∫–∞ –º–∞—Ä—à—Ä—É—Ç–∞ –Ω–∞ –∫–∞—Ä—Ç–µ
/// –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ç–æ—á–µ–∫ –º–∞—Ä—à—Ä—É—Ç–∞ –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç:
/// - –ª–∏–Ω–∏—é –º–∞—Ä—à—Ä—É—Ç–∞ (Polyline)
/// - –º–∞—Ä–∫–µ—Ä –Ω–∞—á–∞–ª–∞ –º–∞—Ä—à—Ä—É—Ç–∞ (–∑–µ–ª—ë–Ω—ã–π)
/// - –º–∞—Ä–∫–µ—Ä –∫–æ–Ω—Ü–∞ –º–∞—Ä—à—Ä—É—Ç–∞ (–∫—Ä–∞—Å–Ω—ã–π)
class RouteCard extends StatelessWidget {
  final List<LatLng> points; // –°–ø–∏—Å–æ–∫ —Ç–æ—á–µ–∫ –º–∞—Ä—à—Ä—É—Ç–∞

  const RouteCard({super.key, required this.points});

  @override
  Widget build(BuildContext context) {
    // –ï—Å–ª–∏ –Ω–µ—Ç —Ç–æ—á–µ–∫, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    if (points.isEmpty) return const Text("–ù–µ—Ç —Ç–æ—á–µ–∫ –º–∞—Ä—à—Ä—É—Ç–∞");

    // üîπ –í—ã—á–∏—Å–ª—è–µ–º —Ü–µ–Ω—Ç—Ä –∫–∞—Ä—Ç—ã –ø–æ —Å—Ä–µ–¥–Ω–µ–º—É –∑–Ω–∞—á–µ–Ω–∏—é lat/lng –≤—Å–µ—Ö —Ç–æ—á–µ–∫
    final lat =
        points.map((e) => e.latitude).reduce((a, b) => a + b) / points.length;
    final lng =
        points.map((e) => e.longitude).reduce((a, b) => a + b) / points.length;
    final center = LatLng(lat, lng);

    return Card(
      margin: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),
      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),
      child: SizedBox(
        height: 200,
        child: FlutterMap(
          options: MapOptions(initialCenter: center, initialZoom: 12.0),
          children: [
            // üîπ –°–ª–æ–π –∫–∞—Ä—Ç—ã OpenStreetMap
            TileLayer(
              urlTemplate: 'https://tile.openstreetmap.org/{z}/{x}/{y}.png',
              userAgentPackageName: 'paceup.ru',
            ),
            // üîπ –õ–∏–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–∞
            PolylineLayer(
              polylines: [
                Polyline(points: points, strokeWidth: 4.0, color: Colors.blue),
              ],
            ),
            // üîπ –ú–∞—Ä–∫–µ—Ä—ã –Ω–∞—á–∞–ª–∞ –∏ –∫–æ–Ω—Ü–∞ –º–∞—Ä—à—Ä—É—Ç–∞
            MarkerLayer(
              markers: [
                Marker(
                  point: points.first,
                  width: 40,
                  height: 40,
                  child: const Icon(
                    Icons.location_on,
                    color: Colors.green,
                    size: 32,
                  ),
                ),
                Marker(
                  point: points.last,
                  width: 40,
                  height: 40,
                  child: const Icon(Icons.flag, color: Colors.red, size: 28),
                ),
              ],
            ),
          ],
        ),
      ),
    );
  }
}

/// üîπ –≠–∫—Ä–∞–Ω –õ–µ–Ω—Ç—ã (Feed)
/// –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏ –ø–æ—Å—Ç—ã
class LentaScreen extends StatelessWidget {
  final int userId; // –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

  const LentaScreen({super.key, required this.userId});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: const Color(0xFFF7F9F9),
      appBar: AppBar(
        elevation: 0,
        backgroundColor: Colors.white,
        centerTitle: true,
        leadingWidth: 100,
        leading: Row(
          mainAxisAlignment: MainAxisAlignment.start,
          children: [
            IconButton(icon: const Icon(Icons.star_border), onPressed: () {}),
            IconButton(
              icon: const Icon(Icons.add_circle_outline),
              onPressed: () {},
            ),
          ],
        ),
        title: const Text("–õ–µ–Ω—Ç–∞", style: AppTextStyles.h1),
        actions: [
          // üîπ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å –∫—Ä–∞—Å–Ω–æ–π —Ç–æ—á–∫–æ–π
          Stack(
            children: [
              IconButton(
                onPressed: () {},
                icon: const Icon(Icons.notifications_outlined),
              ),
              Positioned(
                right: 6,
                top: 6,
                child: Container(
                  padding: const EdgeInsets.all(2),
                  decoration: const BoxDecoration(
                    color: Colors.red,
                    shape: BoxShape.circle,
                  ),
                  child: const Text(
                    "9", // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
                    style: TextStyle(
                      fontSize: 8,
                      color: Colors.white,
                      fontFamily: 'Inter',
                    ),
                  ),
                ),
              ),
            ],
          ),
          IconButton(
            onPressed: () {},
            icon: const Icon(Icons.message_outlined),
          ),
        ],
      ),
      body: ListView(
        children: [
          _buildActivityCard(), // üîπ –ö–∞—Ä—Ç–æ—á–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
          const SizedBox(height: 16),
          _buildRecommendations(), // üîπ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          const SizedBox(height: 16),
          _buildPostCard(), // üîπ –ü—Ä–∏–º–µ—Ä –ø–æ—Å—Ç–∞
        ],
      ),
    );
  }

  /// üîπ –ö–∞—Ä—Ç–æ—á–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  Widget _buildActivityCard() {
    return Card(
      margin: const EdgeInsets.all(12),
      child: Padding(
        padding: const EdgeInsets.all(16),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            // üîπ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏ –¥–∞—Ç–∞
            Row(
              children: [
                const CircleAvatar(
                  radius: 20,
                  backgroundColor: Colors.blueGrey,
                ),
                const SizedBox(width: 8),
                Expanded(
                  child: Text(
                    "–ò–≥–æ—Ä—å –ó–µ–ª—ë–Ω—ã–π",
                    style: const TextStyle(
                      fontWeight: FontWeight.w600,
                      fontFamily: 'Inter',
                    ),
                    overflow: TextOverflow.ellipsis,
                  ),
                ),
                Flexible(
                  child: Text(
                    "8 –∏—é–Ω—è 2025, –≤ 10:28",
                    style: const TextStyle(
                      fontSize: 12,
                      color: Colors.grey,
                      fontFamily: 'Inter',
                    ),
                    overflow: TextOverflow.ellipsis,
                    softWrap: false,
                    textAlign: TextAlign.right,
                  ),
                ),
              ],
            ),
            const SizedBox(height: 12),
            // üîπ –ú–µ—Ç—Ä–∏–∫–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ, –≤—Ä–µ–º—è, —Ç–µ–º–ø
            Row(
              mainAxisAlignment: MainAxisAlignment.spaceAround,
              children: const [
                Metric(title: "–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ", value: "16,00 –∫–º"),
                Metric(title: "–í—Ä–µ–º—è", value: "1:12:34"),
                Metric(title: "–¢–µ–º–ø", value: "4:16 / –∫–º"),
              ],
            ),
            const SizedBox(height: 8),
            // üîπ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏: –Ω–∞–±–æ—Ä –≤—ã—Å–æ—Ç—ã, –∫–∞–¥–µ–Ω—Å, –ø—É–ª—å—Å
            Row(
              mainAxisAlignment: MainAxisAlignment.spaceAround,
              children: const [
                Metric(title: "–ù–∞–±–æ—Ä –≤—ã—Å–æ—Ç—ã", value: "203 –º"),
                Metric(title: "–ö–∞–¥–µ–Ω—Å", value: "179"),
                Metric(title: "–ü—É–ª—å—Å", value: "141"),
              ],
            ),
            const SizedBox(height: 8),
            // üîπ –ö–∞—Ä—Ç–∞ –º–∞—Ä—à—Ä—É—Ç–∞
            RouteCard(
              points: [LatLng(56.43246, 40.42653), LatLng(56.43242, 40.42624)],
            ),
          ],
        ),
      ),
    );
  }

  /// üîπ –ë–ª–æ–∫ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π: –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π ListView —Å –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏ –¥—Ä—É–∑–µ–π
  Widget _buildRecommendations() {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        const Padding(
          padding: EdgeInsets.symmetric(horizontal: 12),
          child: Text(
            "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –≤–∞—Å",
            style: TextStyle(
              fontSize: 14,
              fontWeight: FontWeight.w500,
              fontFamily: 'Inter',
            ),
          ),
        ),
        const SizedBox(height: 12),
        SizedBox(
          height: 280,
          child: ListView(
            scrollDirection: Axis.horizontal,
            padding: const EdgeInsets.symmetric(horizontal: 12),
            children: [
              _friendCard(
                "–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞ –í–∏–Ω–æ–≥—Ä–∞–¥–æ–≤–∞",
                "36 –ª–µ—Ç, –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥",
                "6 –æ–±—â–∏—Ö –¥—Ä—É–∑–µ–π",
              ),
              const SizedBox(width: 12),
              _friendCard(
                "–ê–Ω–∞—Ç–æ–ª–∏–π –ö—É—Ä–∞–≥–∏–Ω",
                "38 –ª–µ—Ç, –ö–æ–≤—Ä–æ–≤",
                "4 –æ–±—â–∏—Ö –¥—Ä—É–≥–∞",
              ),
            ],
          ),
        ),
      ],
    );
  }

  /// üîπ –ö–∞—Ä—Ç–æ—á–∫–∞ –¥—Ä—É–≥–∞ –¥–ª—è –±–ª–æ–∫–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
  Widget _friendCard(String name, String desc, String mutual) {
    return Container(
      width: 220,
      padding: const EdgeInsets.all(16),
      decoration: BoxDecoration(
        color: Colors.white,
        borderRadius: BorderRadius.circular(12),
        boxShadow: const [
          BoxShadow(color: Colors.black12, blurRadius: 4, offset: Offset(0, 2)),
        ],
      ),
      child: Column(
        children: [
          const CircleAvatar(radius: 50, backgroundColor: Colors.blueGrey),
          const SizedBox(height: 12),
          Text(
            name,
            style: const TextStyle(
              fontWeight: FontWeight.w600,
              fontFamily: 'Inter',
            ),
            overflow: TextOverflow.ellipsis,
            maxLines: 1,
          ),
          const SizedBox(height: 4),
          Text(
            desc,
            style: const TextStyle(
              fontSize: 12,
              color: Colors.grey,
              fontFamily: 'Inter',
            ),
            overflow: TextOverflow.ellipsis,
            maxLines: 1,
          ),
          const SizedBox(height: 4),
          Text(
            mutual,
            style: const TextStyle(
              fontSize: 12,
              color: Colors.grey,
              fontFamily: 'Inter',
            ),
            overflow: TextOverflow.ellipsis,
            maxLines: 1,
          ),
          const SizedBox(height: 12),
          ElevatedButton(
            onPressed: () {},
            style: ElevatedButton.styleFrom(
              backgroundColor: const Color(0xFF3999E6),
              shape: RoundedRectangleBorder(
                borderRadius: BorderRadius.circular(20),
              ),
            ),
            child: const Text(
              "–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è",
              style: TextStyle(fontFamily: 'Inter'),
            ),
          ),
        ],
      ),
    );
  }

  /// üîπ –ö–∞—Ä—Ç–æ—á–∫–∞ –ø–æ—Å—Ç–∞ –≤ –ª–µ–Ω—Ç–µ
  Widget _buildPostCard() {
    return Card(
      margin: const EdgeInsets.all(12),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Padding(
            padding: const EdgeInsets.all(12),
            child: Row(
              children: [
                const CircleAvatar(
                  radius: 20,
                  backgroundColor: Colors.blueGrey,
                ),
                const SizedBox(width: 8),
                Expanded(
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: const [
                      Text(
                        "–ê–ª–µ–∫—Å–µ–π –õ—É–∫–∞—à–∏–Ω",
                        style: TextStyle(
                          fontWeight: FontWeight.w600,
                          fontFamily: 'Inter',
                        ),
                        overflow: TextOverflow.ellipsis,
                      ),
                      Text(
                        "7 –∏—é–Ω—è 2025, –≤ 14:36",
                        style: TextStyle(
                          fontSize: 12,
                          color: Colors.grey,
                          fontFamily: 'Inter',
                        ),
                        overflow: TextOverflow.ellipsis,
                      ),
                    ],
                  ),
                ),
                IconButton(
                  onPressed: () {},
                  icon: const Icon(Icons.more_horiz),
                ),
              ],
            ),
          ),
          // üîπ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ—Å—Ç–∞
          Image.network("https://picsum.photos/400/200", fit: BoxFit.cover),
          const Padding(
            padding: EdgeInsets.all(12),
            child: Text(
              "–í–æ—Ç —Ç–∞–∫ –≤–æ—Ç –æ—á–µ–Ω—å –ª–µ–≥–∫–æ –≤—Å–µ—Ö –ø–æ–±–µ–¥–∏–ª",
              style: TextStyle(fontFamily: 'Inter'),
            ),
          ),
          // üîπ –õ–∞–π–∫–∏ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
          Row(
            children: const [
              SizedBox(width: 12),
              Icon(Icons.favorite_border, size: 20),
              SizedBox(width: 4),
              Text("2707", style: TextStyle(fontFamily: 'Inter')),
              SizedBox(width: 16),
              Icon(Icons.mode_comment_outlined, size: 20),
              SizedBox(width: 4),
              Text("50", style: TextStyle(fontFamily: 'Inter')),
            ],
          ),
          const SizedBox(height: 12),
        ],
      ),
    );
  }
}

/// üîπ –í–∏–¥–∂–µ—Ç –º–µ—Ç—Ä–∏–∫–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (—Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ, –≤—Ä–µ–º—è, —Ç–µ–º–ø –∏ —Ç.–¥.)
class Metric extends StatelessWidget {
  final String title; // –ù–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ç—Ä–∏–∫–∏
  final String value; // –ó–Ω–∞—á–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫–∏

  const Metric({super.key, required this.title, required this.value});

  @override
  Widget build(BuildContext context) {
    return Column(
      children: [
        Text(title, style: const TextStyle(fontSize: 12, color: Colors.grey)),
        const SizedBox(height: 4),
        Text(
          value,
          style: const TextStyle(fontSize: 15, fontWeight: FontWeight.bold),
        ),
      ],
    );
  }
}
