import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import '../../theme/app_theme.dart';
import 'settings_placeholder_screen.dart'; // üëà —ç–∫—Ä–∞–Ω-–∑–∞–≥–ª—É—à–∫–∞

class SettingsScreen extends StatelessWidget {
  const SettingsScreen({super.key});

  void _open(BuildContext context, String title, {String? note}) {
    Navigator.of(context).push(
      MaterialPageRoute(
        builder: (_) => SettingsPlaceholderScreen(title: title, note: note),
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: AppColors.background,
      appBar: AppBar(
        backgroundColor: Colors.white,
        elevation: 0,
        centerTitle: true,
        leading: IconButton(
          icon: const Icon(CupertinoIcons.back, color: AppColors.text),
          onPressed: () => Navigator.of(context).maybePop(),
          splashRadius: 18,
        ),
        title: const Text(
          '–ù–∞—Å—Ç—Ä–æ–π–∫–∏',
          style: TextStyle(
            fontFamily: 'Inter',
            fontSize: 17,
            fontWeight: FontWeight.w600,
            color: AppColors.text,
          ),
        ),
        bottom: const PreferredSize(
          preferredSize: Size.fromHeight(0.5),
          child: SizedBox(
            height: 0.5,
            child: ColoredBox(color: Color(0xFFEAEAEA)),
          ),
        ),
      ),
      body: ListView(
        padding: const EdgeInsets.fromLTRB(16, 12, 16, 24),
        children: [
          // –ö–∞—Ä—Ç–æ—á–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ PacePro
          _SubscriptionCard(
            onTap: () => _open(context, '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–æ–π PacePro'),
          ),

          const SizedBox(height: 12),

          // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏—è
          _SettingsGroup(
            children: [
              _SettingsTile(
                icon: CupertinoIcons.slider_horizontal_3,
                iconColor: AppColors.secondary,
                title: '–ü–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–µ —Ç—Ä–µ–∫–µ—Ä—ã',
                onTap: () => _open(context, '–ü–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–µ —Ç—Ä–µ–∫–µ—Ä—ã'),
              ),
            ],
          ),

          const SizedBox(height: 12),

          // –ê–∫–∫–∞—É–Ω—Ç
          _SettingsGroup(
            children: [
              _SettingsTile(
                icon: CupertinoIcons.phone,
                iconColor: AppColors.secondary,
                title: '–¢–µ–ª–µ—Ñ–æ–Ω',
                trailingText: '+7 (9**) ***‚Äì25‚Äì38',
                onTap: () => _open(context, '–¢–µ–ª–µ—Ñ–æ–Ω'),
              ),
              const _Divider(),
              _SettingsTile(
                icon: CupertinoIcons.envelope,
                iconColor: AppColors.secondary,
                title: 'E-mail',
                trailingText: 'pa*****@ya.ru',
                onTap: () => _open(context, 'E-mail'),
              ),
              const _Divider(),
              _SettingsTile(
                icon: CupertinoIcons.lock,
                iconColor: AppColors.secondary,
                title: '–ü–∞—Ä–æ–ª—å',
                trailingText: '********',
                onTap: () => _open(context, '–ü–∞—Ä–æ–ª—å'),
              ),
              const _Divider(),
              _SettingsTile(
                icon: CupertinoIcons.rectangle_on_rectangle_angled,
                iconColor: AppColors.secondary,
                title: '–ö–æ–¥-–ø–∞—Ä–æ–ª—å –∏ Face ID',
                trailingText: '–û—Ç–∫–ª.',
                onTap: () => _open(context, '–ö–æ–¥-–ø–∞—Ä–æ–ª—å –∏ Face ID'),
              ),
            ],
          ),

          const SizedBox(height: 12),

          // –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –¥–∞–Ω–Ω—ã–µ
          _SettingsGroup(
            children: [
              _SettingsTile(
                icon: CupertinoIcons.bell,
                iconColor: AppColors.secondary,
                title: 'Push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è',
                onTap: () => _open(context, 'Push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è'),
              ),
              const _Divider(),
              _SettingsTile(
                icon: CupertinoIcons.arrow_2_circlepath,
                iconColor: AppColors.secondary,
                title: '–î–æ—Å—Ç—É–ø –∫ –¥–∞–Ω–Ω—ã–º',
                onTap: () => _open(context, '–î–æ—Å—Ç—É–ø –∫ –¥–∞–Ω–Ω—ã–º'),
              ),
              const _Divider(),
              _SettingsTile(
                icon: CupertinoIcons.person_2,
                iconColor: AppColors.secondary,
                title: '–ö–æ–Ω—Ç–∞–∫—Ç—ã',
                onTap: () => _open(context, '–ö–æ–Ω—Ç–∞–∫—Ç—ã'),
              ),
              const _Divider(),
              _SettingsTile(
                icon: CupertinoIcons.question_circle,
                iconColor: AppColors.secondary,
                title: '–°–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
                onTap: () => _open(context, '–°–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è'),
              ),
              const _Divider(),
              _SettingsTile(
                icon: CupertinoIcons.bubble_left,
                iconColor: AppColors.secondary,
                title: '–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—é',
                onTap: () => _open(context, '–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—é'),
              ),
            ],
          ),

          const SizedBox(height: 12),

          // –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å
          _SettingsGroup(
            children: [
              _SettingsTile(
                icon: CupertinoIcons.heart,
                iconColor: const Color(0xFFD32F2F),
                title: '–ù–∞ –∫–æ—Ñ–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º',
                trailingText: '99 ‚ÇΩ',
                trailingTextColor: const Color(0xFFD32F2F),
                trailingIconColor: const Color(
                  0xFFD32F2F,
                ), // üîπ –∫—Ä–∞—Å–Ω–∞—è —Å—Ç—Ä–µ–ª–∫–∞
                onTap: () => _open(
                  context,
                  '–ù–∞ –∫–æ—Ñ–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º',
                  note: '–ó–¥–µ—Å—å –±—É–¥–µ—Ç –æ–∫–Ω–æ –æ–ø–ª–∞—Ç—ã –¥–æ–Ω–∞—Ç–∞.',
                ),
              ),
            ],
          ),

          const SizedBox(height: 12),

          // –í—ã—Ö–æ–¥
          _SettingsGroup(
            children: [
              _SettingsTile(
                icon: CupertinoIcons.square_arrow_right,
                iconColor: AppColors.secondary,
                title: '–í—ã–π—Ç–∏',
                onTap: () => _open(
                  context,
                  '–í—ã–π—Ç–∏',
                  note: '–¢—É—Ç –ø–æ—è–≤–∏—Ç—Å—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏ –≤—ã—Ö–æ–¥ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞.',
                ),
              ),
            ],
          ),
        ],
      ),
    );
  }
}

/// –ö–∞—Ä—Ç–æ—á–∫–∞ ¬´–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–æ–π PacePro¬ª
class _SubscriptionCard extends StatelessWidget {
  final VoidCallback? onTap;
  const _SubscriptionCard({this.onTap});

  @override
  Widget build(BuildContext context) {
    return InkWell(
      onTap: onTap,
      borderRadius: BorderRadius.circular(12),
      child: Container(
        decoration: _cardDecoration,
        padding: const EdgeInsets.fromLTRB(4, 4, 12, 4),
        child: Row(
          children: [
            ClipRRect(
              borderRadius: BorderRadius.circular(8),
              child: Image.asset(
                'assets/pacepro.png',
                width: 50,
                height: 50,
                fit: BoxFit.cover,
              ),
            ),
            const SizedBox(width: 12),
            const Expanded(
              child: Text(
                '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–æ–π PacePro',
                style: TextStyle(
                  fontFamily: 'Inter',
                  fontSize: 15,
                  fontWeight: FontWeight.w500,
                  color: AppColors.text,
                  height: 1.2,
                ),
              ),
            ),
            const Icon(
              CupertinoIcons.chevron_forward,
              size: 18,
              color: AppColors.secondary,
            ),
          ],
        ),
      ),
    );
  }
}

/// –ì—Ä—É–ø–ø–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ (–±–µ–ª–∞—è ¬´–∫–∞—Ä—Ç–æ—á–∫–∞¬ª —Å–æ —Å–∫—Ä—É–≥–ª–µ–Ω–∏—è–º–∏)
class _SettingsGroup extends StatelessWidget {
  final List<Widget> children;
  const _SettingsGroup({required this.children});

  @override
  Widget build(BuildContext context) {
    return Container(
      decoration: _cardDecoration,
      child: Column(children: children),
    );
  }
}

/// –û–¥–∏–Ω –ø—É–Ω–∫—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫
class _SettingsTile extends StatelessWidget {
  final IconData icon;
  final Color? iconColor;
  final String title;
  final String? trailingText;
  final Color? trailingTextColor;
  final VoidCallback? onTap;

  /// –¶–≤–µ—Ç —Å—Ç—Ä–µ–ª–∫–∏ —Å–ø—Ä–∞–≤–∞
  final Color trailingIconColor;

  const _SettingsTile({
    super.key,
    required this.icon,
    required this.title,
    this.iconColor,
    this.trailingText,
    this.trailingTextColor,
    this.onTap,
    this.trailingIconColor = AppColors.secondary, // –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å–µ—Ä—ã–π
  });

  @override
  Widget build(BuildContext context) {
    return InkWell(
      onTap: onTap ?? () {},
      borderRadius: BorderRadius.circular(12),
      child: Padding(
        padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 12),
        child: Row(
          children: [
            Container(
              width: 28,
              alignment: Alignment.centerLeft,
              child: Icon(
                icon,
                size: 20,
                color: iconColor ?? const Color(0xFF5E6A7D),
              ),
            ),
            const SizedBox(width: 8),
            Expanded(
              child: Text(
                title,
                style: const TextStyle(
                  fontFamily: 'Inter',
                  fontSize: 15,
                  color: AppColors.text,
                ),
              ),
            ),
            if (trailingText != null) ...[
              Text(
                trailingText!,
                style: TextStyle(
                  fontFamily: 'Inter',
                  fontSize: 14,
                  color: trailingTextColor ?? const Color(0xFF5E6A7D),
                ),
              ),
              const SizedBox(width: 6),
            ],
            Icon(
              CupertinoIcons.chevron_forward,
              size: 18,
              color: trailingIconColor, // üîπ —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç –±—ã—Ç—å —Ü–≤–µ—Ç–Ω–æ–π
            ),
          ],
        ),
      ),
    );
  }
}

/// –¢–æ–Ω–∫–∏–π —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –≤–Ω—É—Ç—Ä–∏ –∫–∞—Ä—Ç–æ—á–∫–∏
class _Divider extends StatelessWidget {
  const _Divider();

  @override
  Widget build(BuildContext context) {
    final hairline = 0.7 / MediaQuery.of(context).devicePixelRatio;
    return Container(
      margin: const EdgeInsets.only(left: 48, right: 12),
      height: hairline,
      color: const Color(0xFFE0E0E0),
    );
  }
}

const _cardDecoration = BoxDecoration(
  color: Colors.white,
  borderRadius: BorderRadius.all(Radius.circular(12)),
  border: Border.fromBorderSide(BorderSide(color: Color(0xFFEAEAEA), width: 1)),
);
